/* Generated by re2c 3.0 */
#line 1 "espurna/ir_parse_state.re"
/*

Part of the IR MODULE

For more info:
- https://re2c.org/
- https://re2c.org/manual/manual_c.html

*/

#pragma once

ParseResult<Payload> parse(StringView view) {
    const char* YYCURSOR { view.begin() };
    const char* YYLIMIT { view.end() };
    const char* YYMARKER;

    const char *p0 = nullptr, *p1 = nullptr;
    const char *c0 = nullptr, *c1 = nullptr;
    const char *s0 = nullptr, *s1 = nullptr;
    const char *d0 = nullptr, *d1 = nullptr;

    ParseResult<Payload> out;

    
#line 29 "espurna/ir_parse_state.re.ipp"
const char *yyt1 { nullptr };
const char *yyt2 { nullptr };
const char *yyt3 { nullptr };
const char *yyt4 { nullptr };
#line 25 "espurna/ir_parse_state.re"

    
#line 37 "espurna/ir_parse_state.re.ipp"
{
	char yych;
	unsigned int yyaccept = 0;
	yych = *YYCURSOR;
	switch (yych) {
		case '0' ... '9':
			yyt1 = YYCURSOR;
			goto yy3;
		default:
			if (YYLIMIT <= YYCURSOR) goto yy16;
			goto yy1;
	}
yy1:
	++YYCURSOR;
yy2:
#line 49 "espurna/ir_parse_state.re"
	{ goto return_out; }
#line 55 "espurna/ir_parse_state.re.ipp"
yy3:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '0' ... ':': goto yy5;
		default: goto yy2;
	}
yy4:
	yych = *++YYCURSOR;
yy5:
	switch (yych) {
		case '0' ... '9': goto yy4;
		case ':': goto yy7;
		default: goto yy6;
	}
yy6:
	YYCURSOR = YYMARKER;
	switch (yyaccept) {
		case 0: goto yy2;
		case 1: goto yy9;
		default: goto yy12;
	}
yy7:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0' ... '9':
		case 'A' ... 'F':
		case 'a' ... 'f':
			yyt2 = YYCURSOR;
			goto yy8;
		default: goto yy6;
	}
yy8:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '0' ... '9':
		case 'A' ... 'F':
		case 'a' ... 'f': goto yy8;
		case ':': goto yy10;
		default: goto yy9;
	}
yy9:
	p0 = yyt1;
	c0 = yyt2;
	p1 = yyt2 - 1;
	c1 = YYCURSOR;
#line 38 "espurna/ir_parse_state.re"
	{ goto update_out; }
#line 105 "espurna/ir_parse_state.re.ipp"
yy10:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0' ... '9':
			yyt3 = YYCURSOR;
			goto yy11;
		default: goto yy6;
	}
yy11:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '0' ... '9': goto yy11;
		case ':': goto yy13;
		default: goto yy12;
	}
yy12:
	p0 = yyt1;
	c0 = yyt2;
	s0 = yyt3;
	p1 = yyt2 - 1;
	c1 = yyt3 - 1;
	s1 = YYCURSOR;
#line 42 "espurna/ir_parse_state.re"
	{ goto update_out; }
#line 131 "espurna/ir_parse_state.re.ipp"
yy13:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0' ... '9':
			yyt4 = YYCURSOR;
			goto yy14;
		default: goto yy6;
	}
yy14:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0' ... '9': goto yy14;
		default: goto yy15;
	}
yy15:
	p0 = yyt1;
	c0 = yyt2;
	s0 = yyt3;
	d0 = yyt4;
	p1 = yyt2 - 1;
	c1 = yyt3 - 1;
	s1 = yyt4 - 1;
	d1 = YYCURSOR;
#line 47 "espurna/ir_parse_state.re"
	{ goto update_out; }
#line 157 "espurna/ir_parse_state.re.ipp"
yy16:
#line 50 "espurna/ir_parse_state.re"
	{ goto return_out; }
#line 161 "espurna/ir_parse_state.re.ipp"
}
#line 51 "espurna/ir_parse_state.re"


update_out:
    {
        if (!((c1 - c0) % 2)) {
            out = prepare(
                StringView{p0, p1},
                StringView{c0, c1},
                StringView{s0, s1},
                StringView{d0, d1});
        }
    }

return_out:
    return out;
}
